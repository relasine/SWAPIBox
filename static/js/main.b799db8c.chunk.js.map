{"version":3,"sources":["components/Crawl/Crawl.js","images.js","components/Card/Card.js","components/CardCenterpiece/CardCenterpiece.js","components/Error/ErrorPage.js","components/Loading/Loading.js","components/CardContainer/CardContainer.js","helpers/fetchCalls.js","helpers/Vehicles.js","helpers/Planets.js","helpers/People.js","components/Hamburger/Hamburger.js","components/App/App.js","serviceWorker.js","index.js"],"names":["Crawl","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkReady","state","ready","setState","showCrawl","hideWelcome","handleFingerPrint","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","thumbprint","setTimeout","printConnect","printHandshake","printWelcome","printBriefing","props","setReady","stop","_callee2","_context2","securing","_callee3","_context3","handshake","_callee4","_context4","welcome","_callee5","_context5","briefing","fadeWelcome","_this2","react_default","createElement","onClick","className","concat","data-text","src","alt","film","opening_crawl","title","episode_id","Component","Images","Sand Crawler","T-16 skyhopper","X-34 landspeeder","TIE/LN starfighter","Snowspeeder","TIE bomber","AT-AT","AT-ST","Storm IV Twin-Pod cloud car","Sail barge","Alderaan","Yavin IV","Hoth","Dagobah","Bespin","Endor","Naboo","Coruscant","Kamino","Geonosis","Luke Skywalker","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","C-3PO","R2-D2","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","Card","_ref","favoriteClass","data","toggleFavorite","favorite","stats","info","map","point","key","keys","name","CardCenterpiece","centertext","selection","ErrorPage","class","Loading","CardContainer","display","centerpiece","error","loading","cards","components_Card_Card","components_Error_ErrorPage","components_Loading_Loading","components_CardCenterpiece_CardCenterpiece","fetchCall","url","response","fetch","sent","json","abrupt","_x","apply","arguments","Vehicles","fetchVehicles","cleanData","cleanVehicles","vehicles","results","vehicle","model","vehicle_class","passengers","category","Planets","fetchPlanets","withResidents","cleanedPlanets","fetchResidents","cleanPlanets","planets","planet","terrain","population","climate","residents","join","_ref2","planetResidents","names","_ref3","resident","residentData","_x2","Promise","all","length","People","fetchPeople","withHomeWorld","withSpecies","fetchHomeWorld","fetchSpecies","cleanPeople","people","person","homeworld","language","species","world","_ref4","_ref5","_x4","_x3","Hamburger","handleHamburger","topToggled","middleToggled","bottomToggled","topBladeToggled","middleBladeToggled","bottomBladeToggled","gripToggled","login","hamburgerChange","loginWarning","App","checkURL","window","location","pathname","currentSelection","checkStorage","favorites","JSON","parse","localStorage","getItem","hamburger","buttons","crawlCall","films","getFilms","fetchFilms","randomNum","Math","floor","random","count","openingCrawl","setItem","stringify","t0","cardData","toggleFavoriteInDatabase","find","fav","removeFavorite","newFavorites","toConsumableArray","library","target","card","updatedFavorites","filter","handleSelection","callFetchPeople","callFetchVehicles","callFetchPlanets","pullVehicleData","fetchVehicleData","pullPeopleData","fetchPeopleData","cleanedPeople","pullPlanetData","fetchPlanetData","components_Hamburger_Hamburger","NavLink","to","Switch","Route","exact","path","render","components_Crawl_Crawl","components_CardContainer_CardContainer","Boolean","hostname","match","router","BrowserRouter","components_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.b799db8c.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Crawl.css';\nimport PropTypes from 'prop-types';\n\n\nclass Crawl extends Component {\n  constructor() {\n    super()\n    this.state = {\n      thumbprint: '',\n      securing: '',\n      handshake: '',\n      welcome: '',\n      briefing: '',\n      fadeWelcome: '',\n      hideWelcome: '',\n      showCrawl: '',\n      ready: false,\n    }\n  }\n\n  checkReady = () => {\n    if (this.state.ready) {\n      this.setState({\n        showCrawl: 'show-crawl',\n        hideWelcome: 'hide-welcome'\n      })\n    }\n  }\n\n  handleFingerPrint = async () => {\n    await this.setState({thumbprint: 'active-thumbprint'})\n    await setTimeout(this.printConnect, 500);\n    await setTimeout(this.printHandshake, 2500);\n    await setTimeout(this.printWelcome, 5000);\n    await setTimeout(this.printBriefing, 6500)\n    await setTimeout(this.props.setReady, 6500);\n  }\n\n  printConnect = async () => {\n    await this.setState({securing: 'print-securing'})\n  }\n\n  printHandshake = async () => {\n    await this.setState({handshake: 'print-handshake'})\n  }\n\n  printWelcome = async () => {\n    await this.setState({welcome: 'print-welcome'})\n  }\n\n  printBriefing = async () => {\n    await this.setState({\n      briefing: 'print-briefing',\n      ready: true\n    })\n  }\n\n\n  render() {\n    return (\n      <aside onClick={() => {this.checkReady()}}>\n        <section className='header-section'>\n          <div className='header-logo-wrapper'>\n            <i className='fab fa-jedi-order header-logo'></i>\n          </div>\n        </section>\n        <main className={`main-landing-section ${this.state.fadeWelcome} ${this.state.hideWelcome}`}>\n          <section className='landing-loading'>\n            <h3>Imprint thumb to connect</h3>\n          </section>\n          <h3 \n            data-text='Securing connection...' \n            className={`securing ${this.state.securing}`}\n          >\n            Securing connection...\n          </h3>\n          <h3 \n            className={`handshake ${this.state.handshake}`}\n            data-text='Handshake successful!'\n          >\n            Handshake successful.\n          </h3>\n          <h3 \n            className={`welcome ${this.state.welcome}`}\n            data-text='Welcome, Master Jedi'\n          >\n            Welcome, Master Jedi.\n          </h3>\n          <div \n            className={`thumbprint ${this.state.thumbprint}`}\n            onClick={() => {this.handleFingerPrint()}}\n          >\n            <img src={'./fingerprint.png'} alt='fingerprint' />\n          </div>\n          <h2 \n            data-text='Tap to receive briefing'\n            className={`briefing ${this.state.briefing}`}\n          >\n            Tap to receive briefing\n          </h2>\n        </main>\n        <main className={`crawl-text-wrapper ${this.state.showCrawl}`}>\n          <h2>Situation Briefing</h2>\n          <p>{this.props.film.opening_crawl}</p>\n          <p className='smol-text'>Briefing Title: <span>{this.props.film.title}</span></p>\n          <p className='smol-text'>Galaxy Date: <span>{this.props.film.episode_id}</span></p>\n        </main>\n      </aside>\n    );\n  }\n}\n  \n\nCrawl.propTypes = {\n  film: PropTypes.object.isRequired\n};\n\nexport default Crawl;","const Images = {\n  \"Sand Crawler\": './sandcrawler.png',\n  \"T-16 skyhopper\": './t16skyhopper.png',\n  \"X-34 landspeeder\": './x34landspeeder.png',\n  \"TIE/LN starfighter\": './tiefighter.png',\n  \"Snowspeeder\": './snowspeeder.png',\n  \"TIE bomber\": './tiebomber.png',\n  \"AT-AT\": './atat.png',\n  \"AT-ST\": './atst.png',\n  \"Storm IV Twin-Pod cloud car\": './cloudcar.png',\n  \"Sail barge\": './sailbarge.png',\n  \"Alderaan\": './alderaan.png',\n  \"Yavin IV\": './yavin4.png',\n  \"Hoth\": './hoth.png',\n  \"Dagobah\": './dagobah.png',\n  \"Bespin\": './bespin.png',\n  \"Endor\": './endor.png',\n  \"Naboo\": './naboo.png',\n  \"Coruscant\": './coruscant.png',\n  \"Kamino\": './kamino.png',\n  \"Geonosis\": './geonosis.png',\n  \"Luke Skywalker\": './luke.png',\n  \"Darth Vader\": './darthvader.png',\n  \"Leia Organa\": './leia.png',\n  \"Owen Lars\": './owen.png',\n  \"Beru Whitesun lars\": './beru.png',\n  \"C-3PO\": './c3p0.png',\n  \"R2-D2\": './r2d2.png',\n  \"R5-D4\": './r5d4.png',\n  \"Biggs Darklighter\": './bigg.png',\n  \"Obi-Wan Kenobi\": './obiwan.png'\n}\n\nexport default Images","import React from 'react';\nimport './Card.css';\nimport Images from '../../images.js'\n\nconst Card = ( {data, toggleFavorite} ) => {\n  let favoriteClass;\n\n  if (data.favorite) {\n    favoriteClass = 'favorited'\n  } else {\n    favoriteClass = ''\n  }\n\n  const stats = data.info.map((point) => {\n    return <p key={Object.keys(point)[0]}>{Object.keys(point)[0]}: <span>{point[Object.keys( point)[0]]}</span></p>\n  })\n\n  return(\n    <article className='card-wrapper'>\n      <article className='figure'>\n        <img\n          className='card-image' \n          src={Images[data.name]}\n          alt={data.name}\n        />\n        <section className='caption'>\n          <div className='card-header'>\n            <h2 className='card-title'>{data.name}</h2>\n            <div className='favorite-icon'></div>\n          </div>\n          <div className='card-content'>\n            {stats}\n            <div className='icon-wrapper' onClick={()=>{toggleFavorite(data)}}>\n              <i className={`fab fa-jedi-order favorite-icon ${favoriteClass}`}></i>\n            </div>\n          </div>\n        </section>\n      </article>\n    </article>\n  )\n}\n\nexport default Card;\n\n","import React from 'react';\nimport './CardCenterpiece.css';\nimport PropTypes from'prop-types';\n\nconst CardCenterpiece = ({selection}) => {\n  let centertext;\n\n  if (selection === 'people'){\n    centertext = 'Persons of Interest'\n  } else if (selection === 'planets') {\n    centertext = 'Locations of Interest'\n  } else if (selection === 'vehicles') {\n    centertext = 'Available Conveyance'\n  } else if (selection === 'favorites') {\n    centertext = 'Saved items'\n  } \n\n  return(\n    <div className=\"card-centerpiece\">\n      <i className='fab fa-jedi-order centerpiece-icon'></i>\n      <h3 className='centerpiece-text'>{centertext}</h3>\n    </div>\n  )\n}\n\nexport default CardCenterpiece","import React from 'react';\n\nimport './ErrorPage.css';\n\nconst ErrorPage = () => {\n  return(\n    <div className=\"error\">\n      <h1 class=\"error\">Connection lost...</h1>\n    </div>\n  )\n}\n\nexport default ErrorPage","import React from 'react';\nimport './Loading.css'\n\nconst Loading = () => {\n  return(\n    <div className=\"loading\">\n      <div className='wrapper'>\n      <div className='loading-wrapper'>\n      <div className=\"circle\"></div>\n      <div className=\"dot\"></div>\n      <div className=\"dot-two\"></div>\n    </div>\n    <i className=\"fab fa-jedi-order icon\"></i>\n    </div>\n    </div>\n  )\n}\n\nexport default Loading","import React from 'react';\nimport Card from '../Card/Card';\nimport CardCenterpiece from '../CardCenterpiece/CardCenterpiece';\nimport ErrorPage from '../Error/ErrorPage';\nimport Loading from '../Loading/Loading';\nimport './CardContainer.css';\n\nconst CardContainer = ({data, selection, toggleFavorite, error, loading}) => {\n\n  const cards = data.map( point => {\n    return  <Card \n      data={point} \n      key={point.name} \n      toggleFavorite={toggleFavorite} \n    />;\n  }) \n\n  let display;\n  let centerpiece;\n\n  if (error) {\n    display = <ErrorPage />\n  } else if (loading) {\n    display = <Loading />\n  } else {\n    display = cards\n    centerpiece = <CardCenterpiece selection={selection} />\n  }\n\n  return (\n    <div className=\"card-container\">\n      {display}\n      {centerpiece}\n    </div>\n  );\n}\n\nexport default CardContainer;\n","const fetchCall = async (url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport default fetchCall;","import fetchCall from './fetchCalls'\n\nclass Vehicles {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchVehicles = async () => {\n    const url = 'https://swapi.co/api/vehicles/'\n    const data = await this.fetchCall(url)\n    const cleanData = this.cleanVehicles(data)\n    return cleanData\n  }\n\n  cleanVehicles = (vehicles) => {\n    return vehicles.results.map((vehicle) => {\n      let vehicleObject = {\n        name: vehicle.name,\n        info: [\n          {model: vehicle.model},\n          {class: vehicle.vehicle_class},\n          {passengers: vehicle.passengers}\n        ],\n        favorite: false,\n        category: 'vehicles'\n      }\n      return vehicleObject;\n    })\n  }\n}\n\n\nexport default Vehicles;","import fetchCall from './fetchCalls'\n\nclass Planets {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchPlanets = async () => {\n    const url = 'https://swapi.co/api/planets/'\n    const data = await this.fetchCall(url);\n    const withResidents = await this.fetchResidents(data.results);\n    const cleanedPlanets = this.cleanPlanets(withResidents)\n    return cleanedPlanets\n  }\n\n  cleanPlanets = (planets) => {\n    return planets.map((planet) => {\n      let planetObject = {\n        name: planet.name,\n        info: [\n          {terrain: planet.terrain},\n          {population: planet.population},\n          {climate: planet.climate},\n          {residents: planet.residents.join(', ')}\n        ],\n        favorite: false,\n        category: 'planets'\n      }\n      return planetObject\n    });\n  }\n\n  fetchResidents = (planets) => {\n    const withResidents = planets.map( async (planet) => {\n      const planetResidents = planet.residents.map( async (resident) => {\n        const residentData = await this.fetchCall(resident);\n        return residentData.name\n      })\n      const names = await Promise.all(planetResidents);\n\n      if (names.length >= 1) {\n        planet.residents = names\n      } else {\n        planet.residents = ['none']\n      }\n\n      return planet\n    })\n    return Promise.all(withResidents)\n  }\n}\n\n\nexport default Planets;","import fetchCall from './fetchCalls'\n\nclass People {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchPeople = async () => {\n    const url = 'https://swapi.co/api/people/'\n    const data = await this.fetchCall(url)\n    const withHomeWorld = await this.fetchHomeWorld(data.results);\n    const withSpecies = await this.fetchSpecies(withHomeWorld);\n    return this.cleanPeople(withSpecies) \n  }\n\n  cleanPeople = (people) => {\n    return people.map((person) => {\n      let personObject = {\n        name: person.name,\n        info: [\n          {homeworld: person.homeworld},\n          {language: person.language},\n          {species: person.species},\n          {population: person.population}\n        ],\n        favorite: false,\n        category: 'people'\n      } \n      return personObject;\n    });\n  }\n\n  fetchHomeWorld = async (people) => {\n    const withHomeWorld = people.map(async (person) => {\n      const world = await this.fetchCall(person.homeworld);\n      person.homeworld = world.name;\n      person.population = world.population;\n      return person;\n    });\n\n    return Promise.all(withHomeWorld);\n  }\n\n  fetchSpecies = async (people) => {\n    const withSpecies = people.map(async (person) =>  {\n      const species = await this.fetchCall(person.species);\n      person.species = species.name;\n      person.language = species.language;\n      return person;\n    });\n\n    return Promise.all(withSpecies)\n  }\n}\n\n\n\nexport default People;","import React, {Component} from 'react';\n\nimport './Hamburger.css';\n\nclass Hamburger extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      topToggled: '',\n      middleToggled: '',\n      bottomToggled: '',\n      topBladeToggled: '',\n      middleBladeToggled: '',\n      bottomBladeToggled: '',\n      gripToggled: '',\n      login: 'hide-login'\n    }\n  }\n\n\n  handleHamburger = () => {\n    if (this.state.topToggled === '' && this.props.ready) {\n      this.setState({\n        topToggled: 'top-toggled',\n        middleToggled: 'middle-toggled',\n        bottomToggled: 'bottom-toggled',\n        topBladeToggled: 'top-blade-toggled',\n        middleBladeToggled: 'middle-blade-toggled',\n        bottomBladeToggled: 'bottom-blade-toggled',\n        gripToggled: 'grip-toggled',\n        login: 'hide-login'\n      })\n      this.props.hamburgerChange();\n    } else if (this.props.ready) {\n      this.setState({\n        topToggled: '',\n        middleToggled: '',\n        bottomToggled: '',\n        topBladeToggled: '',\n        middleBladeToggled: '',\n        bottomBladeToggled: '',\n        gripToggled: '',\n        login: 'hide-login'\n      });\n      this.props.hamburgerChange()\n    } else {\n      this.props.loginWarning()\n    }\n  }\n\n  render() {\n    return(\n      <section \n        className='lightsaburger'\n        onClick={() => {\n          this.handleHamburger()\n        }}\n      >\n        <div className={`top ${this.state.topToggled}`}>\n         <div className={`top-blade blade ${this.state.topBladeToggled}`}></div>\n         <div className={`top-grip grip ${this.state.gripToggled}`}></div>\n        </div>\n        <div className={`middle ${this.state.middleToggled}`}>\n          <div className={`middle-grip grip ${this.state.gripToggled}`}></div>\n          <div className={`middle-blade blade ${this.state.middleBladeToggled}`}></div>\n        </div>\n        <div className={`bottom ${this.state.bottomToggled}`}>\n         <div className={`bottom-blade blade ${this.state.bottomBladeToggled}`}></div>\n         <div className={`bottom-grip grip ${this.state.gripToggled}`}></div>\n        </div>\n\n      </section>\n    )\n  }\n}\n\nexport default Hamburger","import React, { Component } from 'react';\nimport './App.css';\nimport Crawl from '../Crawl/Crawl';\nimport Header from '../Header/Header';\nimport Button from '../Button/Button';\nimport CardContainer from '../CardContainer/CardContainer';\nimport fetchCall from '../../helpers/fetchCalls';\nimport Vehicles from '../../helpers/Vehicles';\nimport Planets from '../../helpers/Planets';\nimport People from '../../helpers/People';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Hamburger from '../Hamburger/Hamburger'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      ready: false,\n      currentSelection: '',\n      openingCrawl: {},\n      people: [],\n      vehicles: [],\n      planets: [],\n      error: false,\n      loading: true,\n      fetchCall: fetchCall,\n      fetchVehicles: new Vehicles(),\n      fetchPeople: new People(),\n      fetchPlanets: new Planets(),\n      favorites: JSON.parse(localStorage.getItem('favorites')) || [],\n      hamburger: 'closed',\n      buttons: 'hide-buttons',\n      login: ''\n    };\n  }\n\n  componentDidMount() {\n    this.crawlCall();\n    this.checkStorage();\n    this.checkURL();\n  }\n\n  checkURL = () => {\n    if (window.location.pathname !== '/'\n    ) {\n      this.setReady();\n    }\n  }\n\n  setReady = () => {\n    if (window.location.pathname === '/people') {\n      this.setState({\n        ready: true,\n        login: '',\n        currentSelection: 'people'\n      })\n    } else if (window.location.pathname === '/planets') {\n      this.setState({\n        ready: true,\n        login: '',\n        currentSelection: 'planets'\n      })\n    } else if (window.location.pathname === '/vehicles') {\n      this.setState({\n        ready: true,\n        login: '',\n        currentSelection: 'vehicles'\n      })\n    } else {\n      this.setState({\n        ready: true,\n        login: ''\n      })\n    }\n  }\n\n  loginWarning = () => {\n    this.setState({\n      login: 'display-login'\n    })\n  }\n\n  checkStorage = () => {\n    this.setState({\n        favorites: JSON.parse(localStorage.getItem('favorites')) || [],\n        planets: JSON.parse(localStorage.getItem('planets')) || [],\n        vehicles: JSON.parse(localStorage.getItem('vehicles')) || [],\n        people: JSON.parse(localStorage.getItem('people')) || []\n    })\n  }\n\n  hamburgerChange = () => {\n    if (this.state.hamburger === 'closed') {\n      this.setState({\n        hamburger: 'deployed',\n        buttons: 'deploy-buttons',\n        login: ''\n      });\n    } else {\n      this.setState({\n        hamburger: 'closed',\n        buttons: 'hide-buttons',\n        login: ''\n      });\n    }\n  }\n\n  crawlCall = () => {\n    if (localStorage.films) {\n      this.getFilms();\n    } else {\n      this.fetchFilms();\n    }\n  }\n\n  getFilms = () => {\n    const films = JSON.parse(localStorage.getItem('films'));\n    const randomNum = Math.floor(Math.random() * (films.count));\n    this.setState({\n      openingCrawl: films.results[randomNum], \n      loading: false,\n      error: false\n    })\n  }\n\n  fetchFilms = async () => {\n    const url = 'https://swapi.co/api/films/';\n    try {\n      const films = await this.state.fetchCall(url);\n\n      const randomNum = Math.floor(Math.random() * (films.count))\n      this.setState({\n        openingCrawl: films.results[randomNum], \n        loading: false,\n        error: false\n      })\n      localStorage.setItem('films', JSON.stringify(films))\n    } catch(error) {\n      this.setState({ \n        error: true, \n        currentSelection: '' \n      })\n    }\n  }\n\n  toggleFavorite = (cardData) => {\n    this.toggleFavoriteInDatabase(cardData);\n      \n    if(this.state.favorites.find( fav => cardData.name === fav.name)){\n      this.removeFavorite(cardData)\n\n\n    } else {\n      cardData.favorite = true;\n      // console.log(cardData.favorite)\n      const newFavorites = [...this.state.favorites, cardData]\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      this.setState({\n        favorites: newFavorites,\n        planets: JSON.parse(localStorage.getItem('planets')) || [],\n        vehicles: JSON.parse(localStorage.getItem('vehicles')) || [],\n        people: JSON.parse(localStorage.getItem('people')) || []\n      })\n    }\n  }\n\n  toggleFavoriteInDatabase = (cardData) => {\n    const library = JSON.parse(localStorage.getItem(cardData.category))\n    const target = library.find( card => cardData.name === card.name);\n    target.favorite = !target.favorite;\n    localStorage.setItem(cardData.category, JSON.stringify(library));\n  }\n\n  removeFavorite = (cardData) => {\n    const updatedFavorites = this.state.favorites.filter( fav => fav.name !== cardData.name)\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites))\n    this.setState({\n      favorites: updatedFavorites,\n      planets: JSON.parse(localStorage.getItem('planets')) || [],\n      vehicles: JSON.parse(localStorage.getItem('vehicles')) || [],\n      people: JSON.parse(localStorage.getItem('people')) || []\n    })\n  }\n \n  handleSelection = (currentSelection) => {\n    if (currentSelection === 'people') {\n      this.callFetchPeople();\n    } else if (currentSelection === 'vehicles') {\n      this.callFetchVehicles();\n    } else if (currentSelection === 'planets') {\n      this.callFetchPlanets()\n    } else {\n      this.setState({\n        currentSelection: 'favorites',\n        loading: false,\n        error: false\n      })\n    }\n  }\n\n  callFetchVehicles = () => {\n    if(localStorage.vehicles){\n      this.pullVehicleData();\n    } else {\n      this.fetchVehicleData();\n    }\n  }\n\n  pullVehicleData = () => {\n    const response = localStorage.getItem('vehicles')\n    const vehicles = JSON.parse(response)\n    this.setState({\n      vehicles: vehicles,\n      currentSelection: 'vehicles',\n      loading: false,\n      error: false\n    })    \n  }\n\n  fetchVehicleData = async() => {\n    await this.setState({ loading: true })\n\n    try {\n      const cleanData = await this.state.fetchVehicles.fetchVehicles()\n      this.setState({\n        vehicles: cleanData,\n        currentSelection: 'vehicles',\n        loading: false,\n        error: false\n      })\n      localStorage.setItem('vehicles', JSON.stringify(cleanData))\n    } catch(error) {\n      this.setState({ error: true, currentSelection: '' })\n    }\n  }\n\n  callFetchPeople = () => {\n    if (localStorage.people) {\n      this.pullPeopleData();\n    } else {\n      this.fetchPeopleData();\n    }\n  }\n\n  pullPeopleData = () => {\n    const response = localStorage.getItem('people')\n      const people = JSON.parse(response)\n      this.setState({\n        people: people,\n        currentSelection: 'people',\n        loading: false,\n        error: false\n    })\n  }\n\n  fetchPeopleData = async () => {\n    await this.setState({ loading: true })\n\n    try {\n      const cleanedPeople = await this.state.fetchPeople.fetchPeople();\n      this.setState({\n        people: cleanedPeople,\n        currentSelection: 'people',\n        loading: false,\n        error: false\n      })\n      localStorage.setItem('people', JSON.stringify(cleanedPeople))\n    } catch(error) {\n      this.setState({ error: true, currentSelection: '' })\n    }\n  }\n\n  callFetchPlanets = () => {\n    if (localStorage.planets){\n      this.pullPlanetData()\n    } else {\n      this.fetchPlanetData()\n    }\n  }\n\n  fetchPlanetData = async () => {\n    await this.setState({ loading: true })\n    try{\n      const cleanedPlanets = await this.state.fetchPlanets.fetchPlanets()\n      this.setState({\n        planets: cleanedPlanets,\n        currentSelection: 'planets',\n        loading: false,\n        error: false\n      })\n      localStorage.setItem('planets', JSON.stringify(cleanedPlanets))\n    } catch(error) {\n      this.setState({ error: true })\n    }\n  }\n\n  pullPlanetData = () => {\n    const response = localStorage.getItem('planets')\n    const planets = JSON.parse(response)\n    this.setState({\n      planets: planets,\n      currentSelection: 'planets',\n      loading: false,\n      error: false\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <div className=\"button-section\">\n          <header>\n            <Hamburger \n              hamburgerChange={this.hamburgerChange}\n              loginWarning={this.loginWarning}\n              ready={this.state.ready}\n            />\n            <h4 className={`please-login ${this.state.login}`}>Please login to access the archives</h4>\n            <section className={`button-wrapper ${this.state.buttons}`}>\n              <NavLink \n                to='/people' className='nav-button people' onClick={() => { this.handleSelection('people')}}>People</NavLink>\n              <NavLink to='/planets' className='nav-button planets' onClick={() => { this.handleSelection('planets')}}>Planets</NavLink>\n              <NavLink to='/vehicles' className='nav-button vehicles' onClick={() => { this.handleSelection('vehicles')}}>Vehicles</NavLink>\n              <NavLink to='/favorites' className='nav-button favorite' onClick={() => { this.handleSelection('favorites')}}>Favorites</NavLink>\n            </section>\n          </header>\n        </div>\n\n        <Switch>\n          <Route exact path='/' render={() => (\n            <Crawl \n              film={this.state.openingCrawl}\n              setReady={this.setReady}\n            />\n          )} />\n\n          <Route exact path='/people' render={() => (\n            <CardContainer \n              data={this.state.people} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading}\n            />\n          )} />\n\n          <Route exact path='/planets' render={() => (\n            <CardContainer \n              data={this.state.planets} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading}\n            />\n          )} />\n\n          <Route exact path='/vehicles' render={() => (\n            <CardContainer \n              data={this.state.vehicles} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading}\n            />\n          )} />\n\n          <Route exact path='/favorites' render={() => (\n            <CardContainer \n              data={this.state.favorites} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading} \n            />\n          )} />\n        \n        </Switch>\n      </div>\n    )\n          // <Route component={404} />\n  }\n}\n\nexport default App;\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}