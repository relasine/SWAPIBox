{"version":3,"sources":["components/Error/ErrorPage.js","components/Crawl/Crawl.js","components/Button/Button.js","images.js","components/Card/Card.js","components/CardCenterpiece/CardCenterpiece.js","components/Loading/Loading.js","components/CardContainer/CardContainer.js","helpers/fetchCalls.js","helpers/Vehicles.js","helpers/Planets.js","helpers/People.js","components/Hamburger/Hamburger.js","components/ModalButtons/ModalButtons.js","components/App/App.js","serviceWorker.js","index.js"],"names":["ErrorPage","_ref","errorState","react_default","a","createElement","className","concat","class","Crawl","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkReady","state","ready","props","error","setState","showCrawl","hideWelcome","console","log","handleFingerPrint","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","thumbprint","setTimeout","printConnect","printHandshake","printWelcome","printBriefing","setReady","stop","_callee2","_context2","securing","_callee3","_context3","handshake","_callee4","_context4","welcome","_callee5","_context5","briefing","fadeWelcome","_this2","onClick","data-text","src","alt","film","opening_crawl","title","episode_id","components_Error_ErrorPage","Component","Button","buttonState","handleSelection","buttonName","currentSelection","Images","Sand Crawler","T-16 skyhopper","X-34 landspeeder","TIE/LN starfighter","Snowspeeder","TIE bomber","AT-AT","AT-ST","Storm IV Twin-Pod cloud car","Sail barge","Alderaan","Yavin IV","Hoth","Dagobah","Bespin","Endor","Naboo","Coruscant","Kamino","Geonosis","Luke Skywalker","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","C-3PO","R2-D2","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","Card","favoriteClass","data","toggleFavorite","favorite","stats","info","map","point","key","keys","name","CardCenterpiece","centertext","selection","Loading","CardContainer","display","centerpiece","loading","cards","components_Card_Card","components_Loading_Loading","components_CardCenterpiece_CardCenterpiece","fetchCall","url","response","fetch","sent","json","abrupt","_x","apply","arguments","Vehicles","fetchVehicles","cleanData","cleanVehicles","vehicles","results","vehicle","model","vehicle_class","passengers","category","Planets","fetchPlanets","withResidents","cleanedPlanets","fetchResidents","cleanPlanets","planets","planet","terrain","population","climate","residents","join","_ref2","planetResidents","names","_ref3","resident","residentData","_x2","Promise","all","length","People","fetchPeople","withHomeWorld","withSpecies","fetchHomeWorld","fetchSpecies","cleanPeople","people","person","homeworld","language","species","world","_ref4","_ref5","_x4","_x3","Hamburger","handleHamburger","topToggled","middleToggled","bottomToggled","topBladeToggled","middleBladeToggled","bottomBladeToggled","gripToggled","login","hamburgerChange","loginWarning","ModalButtons","hamburger","NavLink","to","components_Button_Button","App","checkURL","window","location","pathname","checkStorage","favorites","JSON","parse","localStorage","getItem","buttons","crawlCall","films","getFilms","fetchFilms","randomNum","Math","floor","random","count","openingCrawl","setItem","stringify","t0","cardData","toggleFavoriteInDatabase","find","fav","removeFavorite","newFavorites","toConsumableArray","library","target","card","updatedFavorites","filter","callFetchPeople","callFetchVehicles","callFetchPlanets","pullVehicleData","fetchVehicleData","pullPeopleData","fetchPeopleData","cleanedPeople","pullPlanetData","fetchPlanetData","components_Hamburger_Hamburger","components_ModalButtons_ModalButtons","Switch","Route","exact","path","render","components_Crawl_Crawl","components_CardContainer_CardContainer","Boolean","hostname","match","router","BrowserRouter","components_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.7e53757c.chunk.js","sourcesContent":["import React from 'react';\n\nimport './ErrorPage.css';\n\nconst ErrorPage = ({ errorState }) => {\n  return(\n    <div className={`error-page ${errorState}`}>\n      <h1 class=\"error\">Connection lost...</h1>\n    </div>\n  )\n}\n\nexport default ErrorPage","import React, {Component} from 'react';\nimport './Crawl.css';\nimport PropTypes from 'prop-types';\nimport Error from '../Error/ErrorPage'\n\nclass Crawl extends Component {\n  constructor() {\n    super()\n    this.state = {\n      thumbprint: '',\n      securing: '',\n      handshake: '',\n      welcome: '',\n      briefing: '',\n      fadeWelcome: '',\n      hideWelcome: '',\n      showCrawl: '',\n      ready: false,\n      error: ''\n    }\n  }\n\n  checkReady = () => {\n    if (this.state.ready && !this.props.error) {\n\n      this.setState({\n        showCrawl: 'show-crawl',\n        hideWelcome: 'hide-welcome'\n      })\n    } else if (this.state.ready && this.props.error) {\n      console.log('poooo')\n      this.setState({\n        error: 'display-crawl-error',\n        hideWelcome: 'hide-welcome'\n      })\n    }\n  }\n\n  handleFingerPrint = async () => {\n    await this.setState({thumbprint: 'active-thumbprint'})\n    await setTimeout(this.printConnect, 500);\n    await setTimeout(this.printHandshake, 2500);\n    await setTimeout(this.printWelcome, 5000);\n    await setTimeout(this.printBriefing, 6500);\n    await setTimeout(this.props.setReady, 6500);\n  }\n\n  printConnect = async () => {\n    await this.setState({securing: 'print-securing'})\n  }\n\n  printHandshake = async () => {\n    await this.setState({handshake: 'print-handshake'})\n  }\n\n  printWelcome = async () => {\n    await this.setState({welcome: 'print-welcome'})\n  }\n\n  printBriefing = async () => {\n    await this.setState({\n      briefing: 'print-briefing',\n      ready: true\n    })\n  }\n\n  render() {\n    return (\n      <aside onClick={() => {this.checkReady()}}>\n        <section className='header-section'>\n          <div className='header-logo-wrapper'>\n            <i className='fab fa-jedi-order header-logo'></i>\n          </div>\n        </section>\n        <main className={`main-landing-section ${this.state.fadeWelcome} ${this.state.hideWelcome}`}>\n          <section className='landing-loading'>\n            <h3>Imprint thumb to connect</h3>\n          </section>\n          <h3 \n            data-text='Securing connection...' \n            className={`securing ${this.state.securing}`}\n          >\n            Securing connection...\n          </h3>\n          <h3 \n            className={`handshake ${this.state.handshake}`}\n            data-text='Handshake successful!'\n          >\n            Handshake successful.\n          </h3>\n          <h3 \n            className={`welcome ${this.state.welcome}`}\n            data-text='Welcome, Master Jedi'\n          >\n            Welcome, Master Jedi.\n          </h3>\n          <div \n            className={`thumbprint ${this.state.thumbprint}`}\n            onClick={() => {this.handleFingerPrint()}}\n          >\n            <img src={'./fingerprint.png'} alt='fingerprint' />\n          </div>\n          <h2 \n            data-text='Tap to receive briefing'\n            className={`briefing ${this.state.briefing}`}\n          >\n            Tap to receive briefing\n          </h2>\n        </main>\n        <main className={`crawl-text-wrapper ${this.state.showCrawl}`}>\n          <h2>Situation Briefing</h2>\n          <p>{this.props.film.opening_crawl}</p>\n          <p className='smol-text'>Briefing Title: <span>{this.props.film.title}</span></p>\n          <p className='smol-text'>Galaxy Date: <span>{this.props.film.episode_id}</span></p>\n        </main>\n        <Error errorState={this.state.error}/>\n      </aside>\n    );\n  }\n}\n  \nCrawl.propTypes = {\n  film: PropTypes.object.isRequired,\n  setReady: PropTypes.bool.isRequired\n};\n\nexport default Crawl;","import React from 'react';\nimport './Button.css';\nimport PropTypes from 'prop-types';\n\nconst Button = ({handleSelection, buttonName, currentSelection}) => {\n\n  let buttonState;\n  let buttonPath = `./${buttonName}.png`;\n\n  if (currentSelection === buttonName) {\n    buttonState = 'button-selected'\n  } else {\n    buttonState = ''\n  }\n  \n  return(\n    <div \n      className={`nav-button ${buttonState}`}\n      onClick={() => {\n        handleSelection(buttonName)\n      }}\n    >\n      <h3 \n        data-text={buttonName}\n        className='nav-button-text'>{buttonName}\n      </h3>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired,\n  currentSelection: PropTypes.string.isRequired\n};\n\nexport default Button;","const Images = {\n  \"Sand Crawler\": './sandcrawler.png',\n  \"T-16 skyhopper\": './t16skyhopper.png',\n  \"X-34 landspeeder\": './x34landspeeder.png',\n  \"TIE/LN starfighter\": './tiefighter.png',\n  \"Snowspeeder\": './snowspeeder.png',\n  \"TIE bomber\": './tiebomber.png',\n  \"AT-AT\": './atat.png',\n  \"AT-ST\": './atst.png',\n  \"Storm IV Twin-Pod cloud car\": './cloudcar.png',\n  \"Sail barge\": './sailbarge.png',\n  \"Alderaan\": './alderaan.png',\n  \"Yavin IV\": './yavin4.png',\n  \"Hoth\": './hoth.png',\n  \"Dagobah\": './dagobah.png',\n  \"Bespin\": './bespin.png',\n  \"Endor\": './endor.png',\n  \"Naboo\": './naboo.png',\n  \"Coruscant\": './coruscant.png',\n  \"Kamino\": './kamino.png',\n  \"Geonosis\": './geonosis.png',\n  \"Luke Skywalker\": './luke.png',\n  \"Darth Vader\": './darthvader.png',\n  \"Leia Organa\": './leia.png',\n  \"Owen Lars\": './owen.png',\n  \"Beru Whitesun lars\": './beru.png',\n  \"C-3PO\": './c3p0.png',\n  \"R2-D2\": './r2d2.png',\n  \"R5-D4\": './r5d4.png',\n  \"Biggs Darklighter\": './bigg.png',\n  \"Obi-Wan Kenobi\": './obiwan.png'\n}\n\nexport default Images","import React from 'react';\nimport PropTypes from 'prop-types'\nimport './Card.css';\nimport Images from '../../images.js'\n\nconst Card = ( {data, toggleFavorite} ) => {\n  let favoriteClass;\n\n  if (data.favorite) {\n    favoriteClass = 'favorited'\n  } else {\n    favoriteClass = ''\n  }\n\n  const stats = data.info.map((point) => {\n    return <p key={Object.keys(point)[0]}>{Object.keys(point)[0]}: <span>{point[Object.keys( point)[0]]}</span></p>\n  })\n\n  return(\n    <article \n      className='card-wrapper'\n      onClick={()=>{toggleFavorite(data)}}\n    >\n      <article className='figure'>\n        <img\n          className='card-image' \n          src={Images[data.name]}\n          alt={data.name}\n        />\n        <section className={`caption ${favoriteClass}`}>\n          <div className='card-header'>\n            <h2 className='card-title'>{data.name}</h2>\n            <div className='favorite-icon'></div>\n          </div>\n          <div className='card-content'>\n            {stats}\n            <div className='icon-wrapper' >\n              <i className={'fab fa-jedi-order favorite-icon'}></i>\n            </div>\n          </div>\n        </section>\n      </article>\n    </article>\n  )\n}\n\nCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  key: PropTypes.string.isRequired,\n  toggleFavorite: PropTypes.func.isRequired\n}\n\nexport default Card;\n\n","import React from 'react';\nimport './CardCenterpiece.css';\nimport PropTypes from'prop-types';\n\nconst CardCenterpiece = ({selection}) => {\n  let centertext;\n\n  if (selection === 'people'){\n    centertext = 'Persons of Interest'\n  } else if (selection === 'planets') {\n    centertext = 'Locations of Interest'\n  } else if (selection === 'vehicles') {\n    centertext = 'Available Conveyance'\n  } else if (selection === 'favorites') {\n    centertext = 'Saved items'\n  } \n\n  return(\n    <div className=\"card-centerpiece\">\n      <i className='fab fa-jedi-order centerpiece-icon'></i>\n      <h3 className='centerpiece-text'>{centertext}</h3>\n    </div>\n  )\n}\n\nexport default CardCenterpiece\n\nCardCenterpiece.propTypes = {\n  selection: PropTypes.string.isRequired\n};","import React from 'react';\nimport './Loading.css'\n\nconst Loading = () => {\n  return(\n    <div className=\"loading\">\n      <div className='wrapper'>\n      <div className='loading-wrapper'>\n      <div className=\"circle\"></div>\n      <div className=\"dot\"></div>\n      <div className=\"dot-two\"></div>\n    </div>\n    <i className=\"fab fa-jedi-order icon\"></i>\n    </div>\n    </div>\n  )\n}\n\nexport default Loading","import React from 'react';\nimport Card from '../Card/Card';\nimport CardCenterpiece from '../CardCenterpiece/CardCenterpiece';\nimport ErrorPage from '../Error/ErrorPage';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport './CardContainer.css';\n\nconst CardContainer = ({data, selection, toggleFavorite, error, loading}) => {\n\n  const cards = data.map( point => {\n    return  <Card \n      data={point} \n      key={point.name} \n      toggleFavorite={toggleFavorite} \n    />;\n  }) \n\n  let display;\n  let centerpiece;\n\n  if (error) {\n    display = <ErrorPage />\n  } else if (loading) {\n    display = <Loading />\n  } else {\n    display = cards\n    centerpiece = <CardCenterpiece selection={selection} />\n  }\n\n  return (\n    <div className=\"card-container\">\n      {display}\n      {centerpiece}\n    </div>\n  );\n}\n\nCardContainer.propTypes = {\n  data: PropTypes.array.isRequired,\n  selection:PropTypes.string.isRequired,\n  toggleFavorites:PropTypes.func.isRequired,\n  error:PropTypes.bool.isRequired,\n  loading:PropTypes.bool.isRequired\n}\n\n\nexport default CardContainer;\n","const fetchCall = async (url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport default fetchCall;","import fetchCall from './fetchCalls'\n\nclass Vehicles {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchVehicles = async () => {\n    const url = 'https://swapi.co/api/vehicles/'\n    const data = await this.fetchCall(url)\n    const cleanData = this.cleanVehicles(data)\n    return cleanData\n  }\n\n  cleanVehicles = (vehicles) => {\n    return vehicles.results.map((vehicle) => {\n      let vehicleObject = {\n        name: vehicle.name,\n        info: [\n          {model: vehicle.model},\n          {class: vehicle.vehicle_class},\n          {passengers: vehicle.passengers}\n        ],\n        favorite: false,\n        category: 'vehicles'\n      }\n      return vehicleObject;\n    })\n  }\n}\n\n\nexport default Vehicles;","import fetchCall from './fetchCalls'\n\nclass Planets {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchPlanets = async () => {\n    const url = 'https://swapi.co/api/planets/'\n    const data = await this.fetchCall(url);\n    const withResidents = await this.fetchResidents(data.results);\n    const cleanedPlanets = this.cleanPlanets(withResidents)\n    return cleanedPlanets\n  }\n\n  cleanPlanets = (planets) => {\n    return planets.map((planet) => {\n      let planetObject = {\n        name: planet.name,\n        info: [\n          {terrain: planet.terrain},\n          {population: planet.population},\n          {climate: planet.climate},\n          {residents: planet.residents.join(', ')}\n        ],\n        favorite: false,\n        category: 'planets'\n      }\n      return planetObject\n    });\n  }\n\n  fetchResidents = (planets) => {\n    const withResidents = planets.map( async (planet) => {\n      const planetResidents = planet.residents.map( async (resident) => {\n        const residentData = await this.fetchCall(resident);\n        return residentData.name\n      })\n      const names = await Promise.all(planetResidents);\n\n      if (names.length >= 1) {\n        planet.residents = names\n      } else {\n        planet.residents = ['none']\n      }\n\n      return planet\n    })\n    return Promise.all(withResidents)\n  }\n}\n\n\nexport default Planets;","import fetchCall from './fetchCalls'\n\nclass People {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchPeople = async () => {\n    const url = 'https://swapi.co/api/people/'\n    const data = await this.fetchCall(url)\n    const withHomeWorld = await this.fetchHomeWorld(data.results);\n    const withSpecies = await this.fetchSpecies(withHomeWorld);\n    return this.cleanPeople(withSpecies) \n  }\n\n  cleanPeople = (people) => {\n    return people.map((person) => {\n      let personObject = {\n        name: person.name,\n        info: [\n          {homeworld: person.homeworld},\n          {language: person.language},\n          {species: person.species},\n          {population: person.population}\n        ],\n        favorite: false,\n        category: 'people'\n      } \n      return personObject;\n    });\n  }\n\n  fetchHomeWorld = async (people) => {\n    const withHomeWorld = people.map(async (person) => {\n      const world = await this.fetchCall(person.homeworld);\n      person.homeworld = world.name;\n      person.population = world.population;\n      return person;\n    });\n\n    return Promise.all(withHomeWorld);\n  }\n\n  fetchSpecies = async (people) => {\n    const withSpecies = people.map(async (person) =>  {\n      const species = await this.fetchCall(person.species);\n      person.species = species.name;\n      person.language = species.language;\n      return person;\n    });\n\n    return Promise.all(withSpecies)\n  }\n}\n\n\n\nexport default People;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport './Hamburger.css';\n\nclass Hamburger extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      topToggled: '',\n      middleToggled: '',\n      bottomToggled: '',\n      topBladeToggled: '',\n      middleBladeToggled: '',\n      bottomBladeToggled: '',\n      gripToggled: '',\n      login: 'hide-login'\n    }\n  }\n\n  handleHamburger = () => {\n    if (this.state.topToggled === '' && this.props.ready) {\n      this.setState({\n        topToggled: 'top-toggled',\n        middleToggled: 'middle-toggled',\n        bottomToggled: 'bottom-toggled',\n        topBladeToggled: 'top-blade-toggled',\n        middleBladeToggled: 'middle-blade-toggled',\n        bottomBladeToggled: 'bottom-blade-toggled',\n        gripToggled: 'grip-toggled',\n        login: 'hide-login'\n      })\n      this.props.hamburgerChange();\n    } else if (this.props.ready) {\n      this.setState({\n        topToggled: '',\n        middleToggled: '',\n        bottomToggled: '',\n        topBladeToggled: '',\n        middleBladeToggled: '',\n        bottomBladeToggled: '',\n        gripToggled: '',\n        login: 'hide-login'\n      });\n      this.props.hamburgerChange()\n    } else {\n      this.props.loginWarning()\n    }\n  }\n\n  render() {\n    return(\n      <section \n        className='lightsaburger'\n        onClick={() => {\n          this.handleHamburger()\n        }}\n      >\n        <div className={`top ${this.state.topToggled}`}>\n         <div className={`top-blade blade ${this.state.topBladeToggled}`}></div>\n         <div className={`top-grip grip ${this.state.gripToggled}`}></div>\n        </div>\n        <div className={`middle ${this.state.middleToggled}`}>\n          <div className={`middle-grip grip ${this.state.gripToggled}`}></div>\n          <div className={`middle-blade blade ${this.state.middleBladeToggled}`}></div>\n        </div>\n        <div className={`bottom ${this.state.bottomToggled}`}>\n         <div className={`bottom-blade blade ${this.state.bottomBladeToggled}`}></div>\n         <div className={`bottom-grip grip ${this.state.gripToggled}`}></div>\n        </div>\n\n      </section>\n    )\n  }\n}\n\nHamburger.propTypes = {\n  hamburgerChange: PropTypes.func.isRequired,\n  loginWarning: PropTypes.func.isRequired,\n  ready: PropTypes.bool.isRequired\n}\n\nexport default Hamburger","import React from 'react'\nimport Button from '../Button/Button'\nimport { NavLink } from 'react-router-dom';\n\n\nimport './ModalButtons.css'\n\nconst ModalButtons = ({ currentSelection, handleSelection, hamburger }) => {\n\n  return(\n    <aside className={`modal-buttons-wrapper ${hamburger}`}>\n      <NavLink \n        to='/people' \n        className='nav-button people' \n      >\n        <Button \n          currentSelection={currentSelection}\n          buttonName='people'\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n      <NavLink \n        to='/planets' \n        className='nav-button planets' \n      >\n        <Button \n          currentSelection={currentSelection}\n          buttonName='planets'\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n      <NavLink \n        to='/vehicles' \n        className='nav-button vehicles' \n      >\n        <Button \n          currentSelection={currentSelection}\n          buttonName='vehicles'\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n      <NavLink \n        to='/favorites' \n        className='nav-button favorites' \n      >\n        <Button \n          currentSelection={currentSelection}\n          buttonName='favorites'\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n    </aside>\n  )\n}\n\nexport default ModalButtons;","import React, { Component } from 'react';\nimport './App.css';\nimport Crawl from '../Crawl/Crawl';\nimport Header from '../Header/Header';\nimport Button from '../Button/Button';\nimport CardContainer from '../CardContainer/CardContainer';\nimport fetchCall from '../../helpers/fetchCalls';\nimport Vehicles from '../../helpers/Vehicles';\nimport Planets from '../../helpers/Planets';\nimport People from '../../helpers/People';\nimport { Route, Switch, NavLink } from 'react-router-dom';\nimport Hamburger from '../Hamburger/Hamburger'\nimport ModalButtons from '../ModalButtons/ModalButtons'\n\n\nclass App extends Component {\n  constructor() {\n    super()\n\n    this.state = {\n      ready: false,\n      currentSelection: '',\n      openingCrawl: {},\n      people: [],\n      vehicles: [],\n      planets: [],\n      error: false,\n      loading: true,\n      fetchCall: fetchCall,\n      fetchVehicles: new Vehicles(),\n      fetchPeople: new People(),\n      fetchPlanets: new Planets(),\n      favorites: JSON.parse(localStorage.getItem('favorites')) || [],\n      hamburger: 'closed',\n      buttons: 'hide-buttons',\n      login: ''\n    };\n  }\n\n  componentDidMount() {\n    this.crawlCall();\n    this.checkStorage();\n    this.checkURL();\n  }\n\n  checkURL = () => {\n    if (window.location.pathname !== '/'\n    ) {\n      this.setReady();\n    }\n  }\n\n  setReady = () => {\n    if (window.location.pathname === '/people') {\n      this.setState({\n        ready: true,\n        login: '',\n        currentSelection: 'people'\n      })\n    } else if (window.location.pathname === '/planets') {\n      this.setState({\n        ready: true,\n        login: '',\n        currentSelection: 'planets'\n      })\n    } else if (window.location.pathname === '/vehicles') {\n      this.setState({\n        ready: true,\n        login: '',\n        currentSelection: 'vehicles'\n      })\n    } else {\n      this.setState({\n        ready: true,\n        login: ''\n      })\n    }\n  }\n\n  loginWarning = () => {\n    this.setState({\n      login: 'display-login'\n    })\n  }\n\n  checkStorage = () => {\n    this.setState({\n        favorites: JSON.parse(localStorage.getItem('favorites')) || [],\n        planets: JSON.parse(localStorage.getItem('planets')) || [],\n        vehicles: JSON.parse(localStorage.getItem('vehicles')) || [],\n        people: JSON.parse(localStorage.getItem('people')) || []\n    })\n  }\n\n  hamburgerChange = () => {\n    if (this.state.hamburger === 'closed') {\n      this.setState({\n        hamburger: 'deployed',\n        buttons: 'deploy-buttons',\n        login: ''\n      });\n    } else {\n      this.setState({\n        hamburger: 'closed',\n        buttons: 'hide-buttons',\n        login: ''\n      });\n    }\n  }\n\n  crawlCall = () => {\n    if (localStorage.films) {\n      this.getFilms();\n    } else {\n      this.fetchFilms();\n    }\n  }\n\n  getFilms = () => {\n    const films = JSON.parse(localStorage.getItem('films'));\n    const randomNum = Math.floor(Math.random() * (films.count));\n    this.setState({\n      openingCrawl: films.results[randomNum], \n      loading: false,\n      error: false\n    })\n  }\n\n  fetchFilms = async () => {\n    const url = 'https://swapi.co/api/films/';\n    try {\n      const films = await this.state.fetchCall(url);\n\n      const randomNum = Math.floor(Math.random() * (films.count))\n      this.setState({\n        openingCrawl: films.results[randomNum], \n        loading: false,\n        error: false\n      })\n      localStorage.setItem('films', JSON.stringify(films))\n    } catch(error) {\n      this.setState({ \n        error: true, \n        currentSelection: '' \n      })\n    }\n  }\n\n  toggleFavorite = (cardData) => {\n    this.toggleFavoriteInDatabase(cardData);\n      \n    if(this.state.favorites.find( fav => cardData.name === fav.name)){\n      this.removeFavorite(cardData)\n\n\n    } else {\n      cardData.favorite = true;\n      // console.log(cardData.favorite)\n      const newFavorites = [...this.state.favorites, cardData]\n      localStorage.setItem('favorites', JSON.stringify(newFavorites));\n      this.setState({\n        favorites: newFavorites,\n        planets: JSON.parse(localStorage.getItem('planets')) || [],\n        vehicles: JSON.parse(localStorage.getItem('vehicles')) || [],\n        people: JSON.parse(localStorage.getItem('people')) || []\n      })\n    }\n  }\n\n  toggleFavoriteInDatabase = (cardData) => {\n    const library = JSON.parse(localStorage.getItem(cardData.category))\n    const target = library.find( card => cardData.name === card.name);\n    target.favorite = !target.favorite;\n    localStorage.setItem(cardData.category, JSON.stringify(library));\n  }\n\n  removeFavorite = (cardData) => {\n    const updatedFavorites = this.state.favorites.filter( fav => fav.name !== cardData.name)\n    localStorage.setItem('favorites', JSON.stringify(updatedFavorites))\n    this.setState({\n      favorites: updatedFavorites,\n      planets: JSON.parse(localStorage.getItem('planets')) || [],\n      vehicles: JSON.parse(localStorage.getItem('vehicles')) || [],\n      people: JSON.parse(localStorage.getItem('people')) || []\n    })\n  }\n \n  handleSelection = (currentSelection) => {\n    if (currentSelection === 'people') {\n      this.callFetchPeople();\n    } else if (currentSelection === 'vehicles') {\n      this.callFetchVehicles();\n    } else if (currentSelection === 'planets') {\n      this.callFetchPlanets()\n    } else {\n      this.setState({\n        currentSelection: 'favorites',\n        loading: false,\n        error: false\n      })\n    }\n  }\n\n  callFetchVehicles = () => {\n    if(localStorage.vehicles){\n      this.pullVehicleData();\n    } else {\n      this.fetchVehicleData();\n    }\n  }\n\n  pullVehicleData = () => {\n    const response = localStorage.getItem('vehicles')\n    const vehicles = JSON.parse(response)\n    this.setState({\n      vehicles: vehicles,\n      currentSelection: 'vehicles',\n      loading: false,\n      error: false\n    })    \n  }\n\n  fetchVehicleData = async() => {\n    await this.setState({ loading: true })\n\n    try {\n      const cleanData = await this.state.fetchVehicles.fetchVehicles()\n      this.setState({\n        vehicles: cleanData,\n        currentSelection: 'vehicles',\n        loading: false,\n        error: false\n      })\n      localStorage.setItem('vehicles', JSON.stringify(cleanData))\n    } catch(error) {\n      this.setState({ error: true, currentSelection: '' })\n    }\n  }\n\n  callFetchPeople = () => {\n    if (localStorage.people) {\n      this.pullPeopleData();\n    } else {\n      this.fetchPeopleData();\n    }\n  }\n\n  pullPeopleData = () => {\n    const response = localStorage.getItem('people')\n      const people = JSON.parse(response)\n      this.setState({\n        people: people,\n        currentSelection: 'people',\n        loading: false,\n        error: false\n    })\n  }\n\n  fetchPeopleData = async () => {\n    await this.setState({ loading: true })\n\n    try {\n      const cleanedPeople = await this.state.fetchPeople.fetchPeople();\n      this.setState({\n        people: cleanedPeople,\n        currentSelection: 'people',\n        loading: false,\n        error: false\n      })\n      localStorage.setItem('people', JSON.stringify(cleanedPeople))\n    } catch(error) {\n      this.setState({ error: true, currentSelection: '' })\n    }\n  }\n\n  callFetchPlanets = () => {\n    if (localStorage.planets){\n      this.pullPlanetData()\n    } else {\n      this.fetchPlanetData()\n    }\n  }\n\n  fetchPlanetData = async () => {\n    await this.setState({ loading: true })\n    try{\n      const cleanedPlanets = await this.state.fetchPlanets.fetchPlanets()\n      this.setState({\n        planets: cleanedPlanets,\n        currentSelection: 'planets',\n        loading: false,\n        error: false\n      })\n      localStorage.setItem('planets', JSON.stringify(cleanedPlanets))\n    } catch(error) {\n      this.setState({ error: true })\n    }\n  }\n\n  pullPlanetData = () => {\n    const response = localStorage.getItem('planets')\n    const planets = JSON.parse(response)\n    this.setState({\n      planets: planets,\n      currentSelection: 'planets',\n      loading: false,\n      error: false\n    })\n  }\n\n  render() {\n    return (\n      <div className='App'>\n        <div className=\"button-section\">\n          <header>\n            <Hamburger \n              hamburgerChange={this.hamburgerChange}\n              loginWarning={this.loginWarning}\n              ready={this.state.ready}\n            />\n            <section className='modal-wrapper'>\n              <ModalButtons \n                hamburger={this.state.hamburger}\n                currentSelection={this.state.currentSelection}\n                handleSelection={this.handleSelection}\n              />\n            </section>\n            <h4 className={`please-login ${this.state.login}`}>Please login to access the archives</h4>\n            <section className={`button-wrapper ${this.state.buttons}`}>\n              <NavLink \n                to='/people' \n                className='nav-button people' \n              >\n                <Button \n                  currentSelection={this.state.currentSelection}\n                  buttonName='people'\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n              <NavLink \n                to='/planets' \n                className='nav-button planets' \n              >\n                <Button \n                  currentSelection={this.state.currentSelection}\n                  buttonName='planets'\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n              <NavLink \n                to='/vehicles' \n                className='nav-button vehicles' \n              >\n                <Button \n                  currentSelection={this.state.currentSelection}\n                  buttonName='vehicles'\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n              <NavLink \n                to='/favorites' \n                className='nav-button favorites' \n              >\n                <Button \n                  currentSelection={this.state.currentSelection}\n                  buttonName='favorites'\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n            </section>\n          </header>\n        </div>\n\n        <Switch>\n          <Route exact path='/' render={() => (\n            <Crawl \n              film={this.state.openingCrawl}\n              setReady={this.setReady}\n              error={this.state.error}\n            />\n          )} />\n\n          <Route exact path='/people' render={() => (\n            <CardContainer \n              data={this.state.people} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading}\n            />\n          )} />\n\n          <Route exact path='/planets' render={() => (\n            <CardContainer \n              data={this.state.planets} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading}\n            />\n          )} />\n\n          <Route exact path='/vehicles' render={() => (\n            <CardContainer \n              data={this.state.vehicles} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading}\n            />\n          )} />\n\n          <Route exact path='/favorites' render={() => (\n            <CardContainer \n              data={this.state.favorites} \n              selection={this.state.currentSelection}\n              toggleFavorite={this.toggleFavorite}\n              error={this.state.error}\n              loading={this.state.loading} \n            />\n          )} />\n        \n        </Switch>\n      </div>\n    )\n          // <Route component={404} />\n  }\n}\n\nexport default App;\n\n\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}