{"version":3,"sources":["components/Error/ErrorPage.js","components/Briefing/Briefing.js","components/Loading/Loading.js","components/Crawl/Crawl.js","components/Button/Button.js","images.js","components/Card/Card.js","components/CardCenterpiece/CardCenterpiece.js","components/CardContainer/CardContainer.js","components/Hamburger/Hamburger.js","components/ModalButtons/ModalButtons.js","helpers/fetchCalls.js","helpers/Vehicles.js","helpers/Planets.js","helpers/People.js","helpers/hamburger-helper.js","components/NoMatch/NoMatch.js","components/App/App.js","serviceWorker.js","index.js"],"names":["ErrorPage","_ref","errorState","react_default","a","createElement","className","concat","aria-label","Briefing","crawl","title","id","Loading","Crawl","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","checkReady","state","ready","props","error","setState","showCrawl","hideWelcome","window","innerWidth","hamburger","status","hamburgerChange","handleFingerPrint","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","thumbprint","setTimeout","printConnect","printHandshake","printWelcome","printBriefing","setReady","stop","_callee2","_context2","securing","_callee3","_context3","handshake","_callee4","_context4","welcome","_callee5","_context5","briefing","fadeWelcome","_this2","onClick","data-text","src","alt","loading","film","opening_crawl","components_Briefing_Briefing","episode_id","components_Loading_Loading","components_Error_ErrorPage","Component","Button","buttonState","handleSelection","buttonName","currentSelection","Images","Sand Crawler","T-16 skyhopper","X-34 landspeeder","TIE/LN starfighter","Snowspeeder","TIE bomber","AT-AT","AT-ST","Storm IV Twin-Pod cloud car","Sail barge","Alderaan","Yavin IV","Hoth","Dagobah","Bespin","Endor","Naboo","Coruscant","Kamino","Geonosis","Luke Skywalker","Darth Vader","Leia Organa","Owen Lars","Beru Whitesun lars","C-3PO","R2-D2","R5-D4","Biggs Darklighter","Obi-Wan Kenobi","Available Memory","Card","favoriteClass","data","toggleFavorite","favorite","stats","info","map","point","key","keys","name","CardCenterpiece","centerText","favText","selection","totalFavorites","CardContainer","display","centerpiece","cards","components_Card_Card","components_CardCenterpiece_CardCenterpiece","Hamburger","topToggled","topBladeToggled","gripToggled","middleToggled","middleBladeToggled","bottomToggled","bottomBladeToggled","ModalButtons","NavLink","to","components_Button_Button","fetchCall","url","response","fetch","sent","json","abrupt","_x","apply","arguments","Vehicles","fetchVehicles","cleanData","cleanVehicles","vehicles","results","vehicle","model","class","vehicle_class","passengers","category","Planets","fetchPlanets","withResidents","cleanedPlanets","fetchResidents","cleanPlanets","planets","planet","terrain","population","climate","residents","join","_ref2","planetResidents","names","_ref3","resident","residentData","_x2","Promise","all","length","People","fetchPeople","withHomeWorld","withSpecies","fetchHomeWorld","fetchSpecies","cleanPeople","people","person","homeworld","language","species","world","_ref4","_ref5","_x4","_x3","hamburgerHelper","closed","deployed","NoMatch","location","pathname","App","checkURL","callFetchPeople","callFetchPlanets","callFetchVehicles","login","loginWarning","checkStorage","favorites","JSON","parse","localStorage","getItem","crawlCall","films","getFilms","fetchFilms","randomNum","Math","floor","random","count","openingCrawl","setItem","stringify","t0","buttons","cardData","toggleFavoriteInDatabase","find","fav","removeFavorite","newFavorites","toConsumableArray","library","target","card","updatedFavorites","filter","pullVehicleData","fetchVehicleData","pullPeopleData","fetchPeopleData","cleanedPeople","pullPlanetData","fetchPlanetData","onpopstate","e","_this3","components_Hamburger_Hamburger","components_ModalButtons_ModalButtons","Switch","Route","exact","path","render","components_Crawl_Crawl","components_CardContainer_CardContainer","components_NoMatch_NoMatch","Boolean","hostname","match","router","BrowserRouter","components_App_App","ReactDOM","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.25f196aa.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ErrorPage.css';\n\nconst ErrorPage = ({ errorState }) => {\n  return(\n    <div \n      className={`error-page ${errorState}`}\n      aria-label='error-page'\n    >\n      <h1 className=\"error\">Connection lost...</h1>\n    </div>\n  );\n}\n\nErrorPage.propTypes = {\n  errorState: PropTypes.string.isRequired,\n};\n\nexport default ErrorPage;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Briefing.css';\n\nconst Briefing = ( {crawl, title, id}) => {\n  return (\n    <section aria-label='mission-briefing'>\n      <h2>Situation Briefing</h2>\n      <p className='crawl-text'>{crawl}</p>\n      <p className='smol-text'>Briefing Title: <span>{title}</span></p>\n      <p className='smol-text'>Galaxy Date: <span>{id}</span></p>\n    </section>\n  );\n}\n\nBriefing.propTypes = {\n  crawl: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\n\nexport default Briefing;","import React from 'react';\nimport './Loading.css';\n\nconst Loading = () => {\n  return(\n    <div \n      className=\"loading\"\n      aria-label='loading-image'\n    >\n      <div className='wrapper'>\n      <div className='loading-wrapper'>\n      <div className=\"circle\"></div>\n      <div className=\"dot\"></div>\n      <div className=\"dot-two\"></div>\n    </div>\n    <i className=\"fab fa-jedi-order icon\"></i>\n    </div>\n    </div>\n  );\n}\n\nexport default Loading;","import React, {Component} from 'react';\nimport ErrorPage from '../Error/ErrorPage';\nimport Briefing from '../Briefing/Briefing';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport './Crawl.css';\n\nclass Crawl extends Component {\n  constructor() {\n    super()\n    this.state = {\n      thumbprint: '',\n      securing: '',\n      handshake: '',\n      welcome: '',\n      briefing: '',\n      fadeWelcome: '',\n      hideWelcome: '',\n      showCrawl: '',\n      ready: false,\n      error: ''\n    };\n  }\n\n  checkReady = () => {\n    if (this.state.ready && !this.props.error) {\n\n      this.setState({\n        showCrawl: 'show-crawl',\n        hideWelcome: 'hide-welcome'\n      });\n\n      if (window.innerWidth > 475 && this.props.hamburger.status === 'closed') {\n        this.props.hamburgerChange();\n      }\n\n    } else if (this.state.ready && this.props.error) {\n      this.setState({\n        error: 'display-crawl-error',\n        hideWelcome: 'hide-welcome'\n      });\n    }\n  }\n\n  handleFingerPrint = async () => {\n    await this.setState({thumbprint: 'active-thumbprint'});\n    await setTimeout(this.printConnect, 500);\n    await setTimeout(this.printHandshake, 2500);\n    await setTimeout(this.printWelcome, 5000);\n    await setTimeout(this.printBriefing, 6500);\n    await setTimeout(this.props.setReady, 6500);\n  }\n\n  printConnect = async () => {\n    await this.setState({securing: 'print-securing'});\n  }\n\n  printHandshake = async () => {\n    await this.setState({handshake: 'print-handshake'});\n  }\n\n  printWelcome = async () => {\n    await this.setState({welcome: 'print-welcome'});\n  }\n\n  printBriefing = async () => {\n    await this.setState({\n      briefing: 'print-briefing',\n      ready: true\n    });\n  }\n\n  render() {\n    return (\n      <aside \n        onClick={() => {this.checkReady()}}\n        aria-label='landing-screen'\n      >\n        <section className='header-section'>\n          <div className='header-logo-wrapper'>\n            <i className='fab fa-jedi-order header-logo'></i>\n          </div>\n        </section>\n        <main className={`main-landing-section ${this.state.fadeWelcome} ${this.state.hideWelcome}`}>\n          <section className='landing-loading'>\n            <h3>Imprint thumb to connect</h3>\n          </section>\n          <h3 \n            data-text='Securing connection...' \n            className={`securing ${this.state.securing}`}\n          >\n            Securing connection...\n          </h3>\n          <h3 \n            className={`handshake ${this.state.handshake}`}\n            data-text='Handshake successful!'\n          >\n            Handshake successful.\n          </h3>\n          <h3 \n            className={`welcome ${this.state.welcome}`}\n            data-text='Welcome, Master Jedi'\n          >\n            Welcome, Master Jedi.\n          </h3>\n          <div \n            className={`thumbprint ${this.state.thumbprint}`}\n            onClick={() => {this.handleFingerPrint()}}\n          >\n            <img src={'./fingerprint.png'} alt='fingerprint' />\n          </div>\n          <h2 \n            data-text='Tap to receive briefing'\n            className={`briefing ${this.state.briefing}`}\n          >\n            Tap to receive briefing\n          </h2>\n        </main>\n        <main \n          className={`crawl-text-wrapper ${this.state.showCrawl}`}\n          aria-label='post-login-screen'\n        >\n          {(!this.props.loading && this.props.film.opening_crawl) && <Briefing \n            crawl={this.props.film.opening_crawl}\n            title={this.props.film.title}\n            id={this.props.film.episode_id}\n          />}\n          {this.props.loading && <Loading />}\n\n        </main>\n        <ErrorPage errorState={this.state.error}/>\n      </aside>\n    );\n  }\n}\n  \nCrawl.propTypes = {\n  film: PropTypes.object.isRequired,\n  setReady: PropTypes.func.isRequired,\n  error: PropTypes.bool.isRequired,\n  loading: PropTypes.bool.isRequired\n};\n\nexport default Crawl;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\n\nconst Button = ({handleSelection, buttonName, currentSelection}) => {\n\n  let buttonState;\n\n  if (currentSelection === buttonName) {\n    buttonState = 'button-selected';\n  } else {\n    buttonState = '';\n  }\n  \n  return(\n    <div \n      className={`nav-button ${buttonState}`}\n      onClick={() => {\n        handleSelection(buttonName)\n      }}\n      aria-label='navigation-button'\n    >\n      <h3 \n        data-text={buttonName}\n        className='nav-button-text'>{buttonName}\n      </h3>\n    </div>\n  );\n}\n\nButton.propTypes = {\n  buttonName: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired,\n  currentSelection: PropTypes.string.isRequired\n};\n\nexport default Button;","const Images = {\n  \"Sand Crawler\": \"./public/sandcrawler.png\",\n  \"T-16 skyhopper\": \"./public/t16skyhopper.png\",\n  \"X-34 landspeeder\": \"./public/x34landspeeder.png\",\n  \"TIE/LN starfighter\": \"./public/tiefighter.png\",\n  Snowspeeder: \"./public/snowspeeder.png\",\n  \"TIE bomber\": \"./public/tiebomber.png\",\n  \"AT-AT\": \"./public/atat.png\",\n  \"AT-ST\": \"./public/atst.png\",\n  \"Storm IV Twin-Pod cloud car\": \"./public/cloudcar.png\",\n  \"Sail barge\": \"./public/sailbarge.png\",\n  Alderaan: \"./public/alderaan.png\",\n  \"Yavin IV\": \"./public/yavin4.png\",\n  Hoth: \"./public/hoth.png\",\n  Dagobah: \"./public/dagobah.png\",\n  Bespin: \"./public/bespin.png\",\n  Endor: \"./public/endor.png\",\n  Naboo: \"./public/naboo.png\",\n  Coruscant: \"./public/coruscant.png\",\n  Kamino: \"./public/kamino.png\",\n  Geonosis: \"./public/geonosis.png\",\n  \"Luke Skywalker\": \"./public/luke.png\",\n  \"Darth Vader\": \"./public/darthvader.png\",\n  \"Leia Organa\": \"./public/leia.png\",\n  \"Owen Lars\": \"./public/owen.png\",\n  \"Beru Whitesun lars\": \"./public/beru.png\",\n  \"C-3PO\": \"./public/c3p0.png\",\n  \"R2-D2\": \"./public/r2d2.png\",\n  \"R5-D4\": \"./public/r5d4.png\",\n  \"Biggs Darklighter\": \"./public/bigg.png\",\n  \"Obi-Wan Kenobi\": \"./public/obiwan.png\",\n  \"Available Memory\": \"\"\n};\n\nexport default Images;\n","import React from 'react';\nimport Images from '../../images.js';\nimport PropTypes from 'prop-types';\nimport './Card.css';\n\nconst Card = ({data, toggleFavorite}) => {\n  let favoriteClass;\n\n  if (data.favorite) {\n    favoriteClass = 'favorited';\n  } else {\n    favoriteClass = '';\n  }\n\n  const stats = data.info.map((point) => {\n    return <p key={Object.keys(point)[0]}>{Object.keys(point)[0]}: <span>{point[Object.keys( point)[0]]}</span></p>\n  });\n\n  return(\n    <article \n      aria-label='item-profile-card'\n      className={`card-wrapper`}\n      onClick={()=>{toggleFavorite(data)}}\n    >\n      <article \n        className='figure' \n        aria-label='card-front'\n      >\n        <div className='marked-icon-wrapper'>\n          <div className='favorite-count-wrapper'>\n            <i className={`fas fa-journal-whills ${favoriteClass}`}></i>\n          </div>\n        </div>\n        <img\n          className='card-image' \n          src={Images[data.name]}\n          alt={data.name}\n        />\n        <section \n          className={`caption ${favoriteClass}`} \n          aria-label='card-back'\n        >\n          <div className='card-header'>\n            <h2 className='card-title'>{data.name}</h2>\n            <div className='favorite-icon'></div>\n          </div>\n          <div className='card-content'>\n            {stats}\n            <div className='icon-wrapper' >\n              <i className={'fab fa-jedi-order favorite-icon'}></i>\n            </div>\n          </div>\n        </section>\n      </article>\n    </article>\n  );\n}\n\nCard.propTypes = {\n  data: PropTypes.object.isRequired,\n  toggleFavorite: PropTypes.func.isRequired\n};\n\nexport default Card;\n\n","import React from 'react';\nimport PropTypes from'prop-types';\nimport './CardCenterpiece.css';\n\nconst CardCenterpiece = ({selection, totalFavorites}) => {\n  let centerText;\n\n  if (selection === 'people'){\n    centerText = 'Persons of Interest';\n  } else if (selection === 'planets') {\n    centerText = 'Locations of Interest';\n  } else if (selection === 'vehicles') {\n    centerText = 'Available Conveyance';\n  } else if (selection === 'saved') {\n    centerText = 'Saved items';\n  } else {\n    centerText = '';\n  }\n\n  let favText;\n\n  if (selection === 'saved'){\n    favText = 'tap to remove data';\n  } else {\n    favText = 'tap to save data';\n  }\n\n  return(\n    <div \n      className=\"card-centerpiece\"\n      aria-label='section-label'\n    >\n      <div className='fav-total-wrapper'>\n        <i \n          className=\"fas fa-journal-whills total-fav-icon\"\n          aria-label='saved-items-icon'\n        ></i>\n        <h4 \n          className='fav-count-display'\n          aria-label='saved-items-count'\n        >{totalFavorites}</h4>\n      </div>\n      <i \n        className='fab fa-jedi-order centerpiece-icon'\n        aria-label='jedi-order-icon'\n      ></i>\n      <h3 className='centerpiece-text'>{centerText}</h3>\n      <p className='centerpiece-fav-text'>{favText}</p>\n    </div>\n  )\n}\n\nexport default CardCenterpiece;\n\nCardCenterpiece.propTypes = {\n  selection: PropTypes.string.isRequired,\n  totalFavorites: PropTypes.number.isRequired\n};","import React from 'react';\nimport Card from '../Card/Card';\nimport CardCenterpiece from '../CardCenterpiece/CardCenterpiece';\nimport ErrorPage from '../Error/ErrorPage';\nimport Loading from '../Loading/Loading';\nimport PropTypes from 'prop-types';\nimport './CardContainer.css';\n\nconst CardContainer = ({data, selection, toggleFavorite, error, loading, totalFavorites}) => {\n\n  const cards = data.map( point => {\n    return  <Card \n      data={point} \n      key={point.name} \n      toggleFavorite={toggleFavorite} \n    />;\n  });\n\n  let display;\n  let centerpiece;\n\n  if (error) {\n    display = <ErrorPage />\n  } else if (loading) {\n    display = <Loading />\n  } else {\n    display = cards;\n    centerpiece = <CardCenterpiece selection={selection} totalFavorites={totalFavorites}/>\n  }\n\n  return (\n    <div className=\"card-container\" aria-label='card-container'>\n      {display}\n      {centerpiece}\n    </div>\n  );\n}\n\nCardContainer.propTypes = {\n  data: PropTypes.array.isRequired,\n  selection:PropTypes.string.isRequired,\n  toggleFavorite:PropTypes.func.isRequired,\n  error:PropTypes.bool.isRequired,\n  loading:PropTypes.bool.isRequired,\n  totalFavorites: PropTypes.number.isRequired\n};\n\nexport default CardContainer;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Hamburger.css';\n\nconst Hamburger = ({ hamburgerChange, status }) => {\n  return(\n    <section \n      className='lightsaburger'\n      onClick={() => {\n        hamburgerChange();\n      }}\n      aria-label='menu-button'\n    >\n      <div className={`top ${status.topToggled}`}>\n       <div className={`top-blade blade ${status.topBladeToggled}`}></div>\n       <div className={`top-grip grip ${status.gripToggled}`}></div>\n      </div>\n      <div className={`middle ${status.middleToggled}`}>\n        <div className={`middle-grip grip ${status.gripToggled}`}></div>\n        <div className={`middle-blade blade ${status.middleBladeToggled}`}></div>\n      </div>\n      <div className={`bottom ${status.bottomToggled}`}>\n       <div className={`bottom-blade blade ${status.bottomBladeToggled}`}></div>\n       <div className={`bottom-grip grip ${status.gripToggled}`}></div>\n      </div>\n\n    </section>\n  );\n}\n\nHamburger.propTypes = {\n  status: PropTypes.object.isRequired,\n  hamburgerChange: PropTypes.func.isRequired,\n};\n\nexport default Hamburger;","import React from \"react\";\nimport Button from \"../Button/Button\";\nimport { NavLink } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport \"./ModalButtons.css\";\n\nconst ModalButtons = ({ currentSelection, handleSelection, hamburger }) => {\n  return (\n    <aside\n      className={`modal-buttons-wrapper ${hamburger.status}`}\n      aria-label=\"mobile-navigation-section\"\n    >\n      <NavLink to=\"SWAPIBox/people\" className=\"nav-button people\">\n        <Button\n          currentSelection={currentSelection}\n          buttonName=\"people\"\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n      <NavLink to=\"/SWAPIBox/planets\" className=\"nav-button planets\">\n        <Button\n          currentSelection={currentSelection}\n          buttonName=\"planets\"\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n      <NavLink to=\"/SWAPIBox/vehicles\" className=\"nav-button vehicles\">\n        <Button\n          currentSelection={currentSelection}\n          buttonName=\"vehicles\"\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n      <NavLink to=\"/SWAPIBox/favorites\" className=\"nav-button favorites\">\n        <Button\n          currentSelection={currentSelection}\n          buttonName=\"saved\"\n          handleSelection={handleSelection}\n        />\n      </NavLink>\n    </aside>\n  );\n};\n\nModalButtons.propTypes = {\n  currentSelection: PropTypes.string.isRequired,\n  handleSelection: PropTypes.func.isRequired,\n  hamburger: PropTypes.object.isRequired\n};\n\nexport default ModalButtons;\n","const fetchCall = async (url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n}\n\nexport default fetchCall;","import fetchCall from './fetchCalls';\n\nclass Vehicles {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchVehicles = async () => {\n    const url = 'https://swapi.co/api/vehicles/';\n    const data = await this.fetchCall(url);\n    const cleanData = this.cleanVehicles(data);\n    return cleanData;\n  }\n\n  cleanVehicles = (vehicles) => {\n    return vehicles.results.map((vehicle) => {\n      let vehicleObject = {\n        name: vehicle.name,\n        info: [\n          {model: vehicle.model},\n          {class: vehicle.vehicle_class},\n          {passengers: vehicle.passengers}\n        ],\n        favorite: false,\n        category: 'vehicles'\n      };\n      return vehicleObject;\n    })\n  }\n}\n\nexport default Vehicles;","import fetchCall from './fetchCalls';\n\nclass Planets {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchPlanets = async () => {\n    const url = 'https://swapi.co/api/planets/';\n    const data = await this.fetchCall(url);\n    const withResidents = await this.fetchResidents(data.results);\n    const cleanedPlanets = this.cleanPlanets(withResidents);\n    return cleanedPlanets;\n  }\n\n  cleanPlanets = (planets) => {\n    return planets.map((planet) => {\n      let planetObject = {\n        name: planet.name,\n        info: [\n          {terrain: planet.terrain},\n          {population: planet.population},\n          {climate: planet.climate},\n          {residents: planet.residents.join(', ')}\n        ],\n        favorite: false,\n        category: 'planets'\n      };\n      return planetObject;\n    });\n  }\n\n  fetchResidents = (planets) => {\n    const withResidents = planets.map( async (planet) => {\n      const planetResidents = planet.residents.map( async (resident) => {\n        const residentData = await this.fetchCall(resident);\n        return residentData.name\n      });\n      const names = await Promise.all(planetResidents);\n\n      if (names.length >= 1) {\n        planet.residents = names\n      } else {\n        planet.residents = ['none']\n      }\n\n      return planet\n    });\n    return Promise.all(withResidents);\n  }\n}\n\nexport default Planets;","import fetchCall from './fetchCalls';\n\nclass People {\n  constructor() {\n    this.fetchCall = fetchCall\n  }\n\n  fetchPeople = async () => {\n    const url = 'https://swapi.co/api/people/';\n    const data = await this.fetchCall(url);\n    const withHomeWorld = await this.fetchHomeWorld(data.results);\n    const withSpecies = await this.fetchSpecies(withHomeWorld);\n    return this.cleanPeople(withSpecies);\n  }\n\n  cleanPeople = (people) => {\n    return people.map((person) => {\n      let personObject = {\n        name: person.name,\n        info: [\n          {homeworld: person.homeworld},\n          {language: person.language},\n          {species: person.species},\n          {population: person.population}\n        ],\n        favorite: false,\n        category: 'people'\n      } \n      return personObject;\n    });\n  }\n\n  fetchHomeWorld = async (people) => {\n    const withHomeWorld = people.map(async (person) => {\n      const world = await this.fetchCall(person.homeworld);\n      person.homeworld = world.name;\n      person.population = world.population;\n      return person;\n    });\n\n    return Promise.all(withHomeWorld);\n  }\n\n  fetchSpecies = async (people) => {\n    const withSpecies = people.map(async (person) =>  {\n      const species = await this.fetchCall(person.species);\n      person.species = species.name;\n      person.language = species.language;\n      return person;\n    });\n\n    return Promise.all(withSpecies);\n  }\n}\n\nexport default People;","const hamburgerHelper = {\n    closed: {\n        status: 'closed',\n        topToggled: '',\n        middleToggled: '',\n        bottomToggled: '',\n        topBladeToggled: '',\n        middleBladeToggled: '',\n        bottomBladeToggled: '',\n        gripToggled: ''\n    },\n    deployed: {\n        status: 'deployed',\n        topToggled: 'top-toggled',\n        middleToggled: 'middle-toggled',\n        bottomToggled: 'bottom-toggled',\n        topBladeToggled: 'top-blade-toggled',\n        middleBladeToggled: 'middle-blade-toggled',\n        bottomBladeToggled: 'bottom-blade-toggled',\n        gripToggled: 'grip-toggled'    \n    }\n};\n\nexport default hamburgerHelper;","import React from 'react';\n\nimport './NoMatch.css';\n\nconst NoMatch = ({ location }) => {\n  return(\n    <section className='no-match' aria-label='404-error'>\n      <h3 className='bad-path-message'>There is no entry within the archives for {location.pathname}</h3>\n    </section>\n  );\n} \n\nexport default NoMatch;","import React, { Component } from \"react\";\nimport Crawl from \"../Crawl/Crawl\";\nimport Button from \"../Button/Button\";\nimport CardContainer from \"../CardContainer/CardContainer\";\nimport Hamburger from \"../Hamburger/Hamburger\";\nimport ModalButtons from \"../ModalButtons/ModalButtons\";\nimport fetchCall from \"../../helpers/fetchCalls\";\nimport Vehicles from \"../../helpers/Vehicles\";\nimport Planets from \"../../helpers/Planets\";\nimport People from \"../../helpers/People\";\nimport hamburgerHelper from \"../../helpers/hamburger-helper\";\nimport { Route, Switch, NavLink } from \"react-router-dom\";\nimport NoMatch from \"../NoMatch/NoMatch\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      ready: false,\n      currentSelection: \"\",\n      openingCrawl: {},\n      people: [],\n      vehicles: [],\n      planets: [],\n      error: false,\n      loading: true,\n      fetchCall: fetchCall,\n      fetchVehicles: new Vehicles(),\n      fetchPeople: new People(),\n      fetchPlanets: new Planets(),\n      favorites: JSON.parse(localStorage.getItem(\"favorites\")) || [],\n      hamburger: hamburgerHelper.closed,\n      hamburgerHelper: hamburgerHelper,\n      buttons: \"hide-buttons\",\n      login: \"\"\n    };\n  }\n\n  componentDidMount() {\n    this.crawlCall();\n    this.checkStorage();\n    this.checkURL();\n  }\n\n  componentDidUpdate() {\n    window.onpopstate = e => {\n      this.checkURL();\n    };\n  }\n\n  // ONLOAD FUNCTIONS //\n\n  checkURL = () => {\n    if (window.location.pathname === \"/people\") {\n      this.callFetchPeople();\n      this.setReady();\n    } else if (window.location.pathname === \"/planets\") {\n      this.callFetchPlanets();\n      this.setReady();\n    } else if (window.location.pathname === \"/vehicles\") {\n      this.callFetchVehicles();\n      this.setReady();\n    } else if (window.location.pathname === \"/favorites\") {\n      this.setState({\n        currentSelection: \"saved\",\n        loading: false,\n        error: false\n      });\n      this.setReady();\n    } else if (window.location.pathname !== \"/\") {\n      this.setReady();\n    }\n  };\n\n  setReady = () => {\n    if (window.location.pathname === \"/people\") {\n      this.setState({\n        ready: true,\n        login: \"\",\n        currentSelection: \"people\"\n      });\n    } else if (window.location.pathname === \"/planets\") {\n      this.setState({\n        ready: true,\n        login: \"\",\n        currentSelection: \"planets\"\n      });\n    } else if (window.location.pathname === \"/vehicles\") {\n      this.setState({\n        ready: true,\n        login: \"\",\n        currentSelection: \"vehicles\"\n      });\n    } else {\n      this.setState({\n        ready: true,\n        login: \"\"\n      });\n    }\n  };\n\n  loginWarning = () => {\n    this.setState({\n      login: \"display-login\"\n    });\n  };\n\n  checkStorage = () => {\n    this.setState({\n      favorites: JSON.parse(localStorage.getItem(\"favorites\")) || [],\n      planets: JSON.parse(localStorage.getItem(\"planets\")) || [],\n      vehicles: JSON.parse(localStorage.getItem(\"vehicles\")) || [],\n      people: JSON.parse(localStorage.getItem(\"people\")) || []\n    });\n  };\n\n  // LANDING PAGE LOGIC //\n\n  crawlCall = () => {\n    if (localStorage.films) {\n      this.getFilms();\n    } else {\n      this.fetchFilms();\n    }\n  };\n\n  getFilms = () => {\n    const films = JSON.parse(localStorage.getItem(\"films\"));\n    const randomNum = Math.floor(Math.random() * films.count);\n    this.setState({\n      openingCrawl: films.results[randomNum],\n      loading: false,\n      error: false\n    });\n  };\n\n  fetchFilms = async () => {\n    const url = \"https://swapi.co/api/films/\";\n    try {\n      const films = await this.state.fetchCall(url);\n      const randomNum = Math.floor(Math.random() * films.count);\n\n      this.setState({\n        openingCrawl: films.results[randomNum],\n        loading: false,\n        error: false\n      });\n      localStorage.setItem(\"films\", JSON.stringify(films));\n    } catch (error) {\n      this.setState({\n        error: true,\n        currentSelection: \"\"\n      });\n    }\n  };\n\n  // PAGE SELECTION LOGIC //\n\n  hamburgerChange = async () => {\n    if (this.state.hamburger.status === \"closed\" && this.state.ready) {\n      await this.setState({\n        hamburger: this.state.hamburgerHelper.deployed,\n        buttons: \"deploy-buttons\",\n        login: \"\"\n      });\n    } else if (this.state.hamburger.status === \"deployed\" && this.state.ready) {\n      await this.setState({\n        hamburger: this.state.hamburgerHelper.closed,\n        buttons: \"hide-buttons\",\n        login: \"\"\n      });\n    } else {\n      await this.loginWarning();\n    }\n  };\n\n  handleSelection = currentSelection => {\n    if (\n      currentSelection !== this.state.currentSelection &&\n      window.innerWidth < 476\n    ) {\n      this.setState({\n        hamburger: this.state.hamburgerHelper.closed\n      });\n    }\n\n    if (currentSelection === \"people\") {\n      this.callFetchPeople();\n    } else if (currentSelection === \"vehicles\") {\n      this.callFetchVehicles();\n    } else if (currentSelection === \"planets\") {\n      this.callFetchPlanets();\n    } else {\n      this.setState({\n        currentSelection: \"saved\",\n        loading: false,\n        error: false\n      });\n    }\n  };\n\n  // FAVORITES LOGIC //\n\n  toggleFavorite = cardData => {\n    this.toggleFavoriteInDatabase(cardData);\n\n    if (this.state.favorites.find(fav => cardData.name === fav.name)) {\n      this.removeFavorite(cardData);\n    } else {\n      cardData.favorite = true;\n      const newFavorites = [...this.state.favorites, cardData];\n      localStorage.setItem(\"favorites\", JSON.stringify(newFavorites));\n      this.setState({\n        favorites: newFavorites,\n        planets: JSON.parse(localStorage.getItem(\"planets\")) || [],\n        vehicles: JSON.parse(localStorage.getItem(\"vehicles\")) || [],\n        people: JSON.parse(localStorage.getItem(\"people\")) || []\n      });\n    }\n  };\n\n  toggleFavoriteInDatabase = cardData => {\n    const library = JSON.parse(localStorage.getItem(cardData.category));\n    const target = library.find(card => cardData.name === card.name);\n    target.favorite = !target.favorite;\n    localStorage.setItem(cardData.category, JSON.stringify(library));\n  };\n\n  removeFavorite = cardData => {\n    const updatedFavorites = this.state.favorites.filter(\n      fav => fav.name !== cardData.name\n    );\n    localStorage.setItem(\"favorites\", JSON.stringify(updatedFavorites));\n    this.setState({\n      favorites: updatedFavorites,\n      planets: JSON.parse(localStorage.getItem(\"planets\")) || [],\n      vehicles: JSON.parse(localStorage.getItem(\"vehicles\")) || [],\n      people: JSON.parse(localStorage.getItem(\"people\")) || []\n    });\n  };\n\n  // VEHICLE DATA HANDLING //\n\n  callFetchVehicles = () => {\n    if (localStorage.vehicles) {\n      this.pullVehicleData();\n    } else {\n      this.setState({ loading: true });\n      this.fetchVehicleData();\n    }\n  };\n\n  pullVehicleData = () => {\n    const response = localStorage.getItem(\"vehicles\");\n    const vehicles = JSON.parse(response);\n    this.setState({\n      vehicles: vehicles,\n      currentSelection: \"vehicles\",\n      loading: false,\n      error: false\n    });\n  };\n\n  fetchVehicleData = async () => {\n    try {\n      const cleanData = await this.state.fetchVehicles.fetchVehicles();\n      this.setState({\n        vehicles: cleanData,\n        currentSelection: \"vehicles\",\n        loading: false,\n        error: false\n      });\n      localStorage.setItem(\"vehicles\", JSON.stringify(cleanData));\n    } catch (error) {\n      this.setState({ error: true, currentSelection: \"\" });\n    }\n  };\n\n  // PEOPLE DATA HANDLING //\n\n  callFetchPeople = () => {\n    if (localStorage.people) {\n      this.pullPeopleData();\n    } else {\n      this.setState({ loading: true });\n      this.fetchPeopleData();\n    }\n  };\n\n  pullPeopleData = () => {\n    const response = localStorage.getItem(\"people\");\n    const people = JSON.parse(response);\n    this.setState({\n      people: people,\n      currentSelection: \"people\",\n      loading: false,\n      error: false\n    });\n  };\n\n  fetchPeopleData = async () => {\n    try {\n      const cleanedPeople = await this.state.fetchPeople.fetchPeople();\n      this.setState({\n        people: cleanedPeople,\n        currentSelection: \"people\",\n        loading: false,\n        error: false\n      });\n      localStorage.setItem(\"people\", JSON.stringify(cleanedPeople));\n    } catch (error) {\n      this.setState({ error: true, currentSelection: \"\" });\n    }\n  };\n\n  // PLANET DATA HANDLING //\n\n  callFetchPlanets = () => {\n    if (localStorage.planets) {\n      this.pullPlanetData();\n    } else {\n      this.setState({ loading: true });\n      this.fetchPlanetData();\n    }\n  };\n\n  pullPlanetData = () => {\n    const response = localStorage.getItem(\"planets\");\n    const planets = JSON.parse(response);\n    this.setState({\n      planets: planets,\n      currentSelection: \"planets\",\n      loading: false,\n      error: false\n    });\n  };\n\n  fetchPlanetData = async () => {\n    try {\n      const cleanedPlanets = await this.state.fetchPlanets.fetchPlanets();\n      this.setState({\n        planets: cleanedPlanets,\n        currentSelection: \"planets\",\n        loading: false,\n        error: false\n      });\n      localStorage.setItem(\"planets\", JSON.stringify(cleanedPlanets));\n    } catch (error) {\n      this.setState({ error: true });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"button-section\" aria-label=\"navigation-section-wrapper\">\n          <header>\n            <Hamburger\n              hamburgerChange={this.hamburgerChange}\n              status={this.state.hamburger}\n            />\n            <section\n              className=\"modal-wrapper\"\n              aria-label=\"mobile-navigation-section\"\n            >\n              <ModalButtons\n                hamburger={this.state.hamburger}\n                currentSelection={this.state.currentSelection}\n                handleSelection={this.handleSelection}\n              />\n            </section>\n            <h4 className={`please-login ${this.state.login}`}>\n              Please login to access the archives\n            </h4>\n            <section\n              className={`button-wrapper ${this.state.buttons}`}\n              aria-label=\"navigation\"\n            >\n              <NavLink to=\"/SWAPIBox/people\" className=\"nav-button people\">\n                <Button\n                  currentSelection={this.state.currentSelection}\n                  buttonName=\"people\"\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n              <NavLink to=\"/SWAPIBox/planets\" className=\"nav-button planets\">\n                <Button\n                  currentSelection={this.state.currentSelection}\n                  buttonName=\"planets\"\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n              <NavLink to=\"/SWAPIBox/vehicles\" className=\"nav-button vehicles\">\n                <Button\n                  currentSelection={this.state.currentSelection}\n                  buttonName=\"vehicles\"\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n              <NavLink\n                to=\"/SWAPIBox/favorites\"\n                className=\"nav-button favorites\"\n              >\n                <Button\n                  currentSelection={this.state.currentSelection}\n                  buttonName=\"saved\"\n                  handleSelection={this.handleSelection}\n                />\n              </NavLink>\n            </section>\n          </header>\n        </div>\n\n        <Switch>\n          <Route\n            exact\n            path=\"/SWAPIBox\"\n            render={() => (\n              <Crawl\n                film={this.state.openingCrawl}\n                setReady={this.setReady}\n                error={this.state.error}\n                loading={this.state.error}\n                hamburgerChange={this.hamburgerChange}\n                hamburger={this.state.hamburger}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/SWAPIBox/people\"\n            render={() => (\n              <CardContainer\n                data={this.state.people}\n                selection={this.state.currentSelection}\n                toggleFavorite={this.toggleFavorite}\n                error={this.state.error}\n                loading={this.state.loading}\n                totalFavorites={this.state.favorites.length}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/SWAPIBox/planets\"\n            render={() => (\n              <CardContainer\n                data={this.state.planets}\n                selection={this.state.currentSelection}\n                toggleFavorite={this.toggleFavorite}\n                error={this.state.error}\n                loading={this.state.loading}\n                totalFavorites={this.state.favorites.length}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/SWAPIBox/vehicles\"\n            render={() => (\n              <CardContainer\n                data={this.state.vehicles}\n                selection={this.state.currentSelection}\n                toggleFavorite={this.toggleFavorite}\n                error={this.state.error}\n                loading={this.state.loading}\n                totalFavorites={this.state.favorites.length}\n              />\n            )}\n          />\n\n          <Route\n            exact\n            path=\"/SWAPIBox/favorites\"\n            render={() => (\n              <CardContainer\n                data={this.state.favorites}\n                selection={this.state.currentSelection}\n                toggleFavorite={this.toggleFavorite}\n                error={this.state.error}\n                loading={this.state.loading}\n                totalFavorites={this.state.favorites.length}\n              />\n            )}\n          />\n          <Route render={() => <NoMatch location={window.location} />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nconst router = (\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(router, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}